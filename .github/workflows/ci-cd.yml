name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    name: Build & Test
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout código
        uses: actions/checkout@v4

      - name: ☕ Configurar Java 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'

      - name: 🔨 Compilar e rodar testes unitários
        run: mvn test -Dtest=unit.**

      - name: 📌 Rodar testes de integração
        run: mvn test -Dtest=integration.**

      - name: 📦 Empacotar
        run: mvn clean package

      - name: 📦 Criar artefato do JAR
        uses: actions/upload-artifact@v4
        with:
          name: isvalid-api-jar
          path: target/*.jar

#  build-and-push-docker:
#    name: Build & Push Docker Image
#    runs-on: ubuntu-latest
#    needs: build-and-test
#    steps:
#      - name: 📥 Checkout código
#        uses: actions/checkout@v4
#
#      - name: 🔑 Login no GitLab Container Registry
#        run: echo "${{ secrets.GITLAB_REGISTRY_PASSWORD }}" | docker login registry.gitlab.com -u "${{ secrets.GITLAB_REGISTRY_USER }}" --password-stdin
#
#      - name: 🏗️ Construir imagem Docker
#        run: |
#          docker build -t registry.gitlab.com/${{ secrets.GITLAB_PROJECT }}/isvalid-api:latest .
#
#      - name: 📤 Publicar imagem no GitLab Container Registry
#        run: |
#          docker push registry.gitlab.com/${{ secrets.GITLAB_PROJECT }}/isvalid-api:latest
#
#  deploy:
#    name: Deploy to Server (Optional)
#    runs-on: ubuntu-latest
#    needs: build-and-push-docker
#    steps:
#      - name: 🚀 Fazer deploy (opcional)
#        run: |
#          echo "Fazendo deploy..."
#          # Adicione comandos para rodar no servidor, como:
#          # ssh user@server 'docker pull registry.gitlab.com/${{ secrets.GITLAB_PROJECT }}/isvalid-api:latest && docker-compose up -d'

